# generated by cabal-rpm-2.0.6
# https://docs.fedoraproject.org/en-US/packaging-guidelines/Haskell/

%global pkg_name gitit
%global pkgver %{pkg_name}-%{version}

Name:           %{pkg_name}
Version:        0.13.0.0
Release:        4%{?dist}
Summary:        Wiki using happstack, git or darcs, and pandoc

# Main package is under GPLv2
# jquery: MIT
# Bluetrip: MIT or GPLv2
# YUI: BSD
# TANGOICONS: CC-BY-SA
License:        GPLv2 and MIT and BSD and CC-BY-SA and (MIT or GPLv2)
Url:            https://hackage.haskell.org/package/%{pkg_name}
# Begin cabal-rpm sources:
Source0:        https://hackage.haskell.org/package/%{pkgver}/%{pkgver}.tar.gz
# End cabal-rpm sources

# Configuration produced by running the following command:
# $ gitit --print-default-config > gitit.conf
# Unfortunately, I don't know if it's easy to do this *inside* the package.
Source1:        gitit.conf

# Systemd service file for gitit.
Source2:        gitit.service

# Bundled provides for some JS and CSS.
Provides:       bundled(js-jquery) = 1.2.6
Provides:       bundled(js-jquery-ui) = 1.6rc2
Provides:       bundled(js-jquery-hotkeys) = 0.7.9
Provides:       bundled(js-yui2) = 2.7.0

# I couldn't find any version information for bluetrip or tango icons.
Provides:       bundled(bluetrip)
Provides:       bundled(tango-icon-theme)

# We install a systemd service file.
BuildRequires:  systemd

# Want to create a user for gitit.
Requires(pre):  shadow-utils

# Begin cabal-rpm deps:
BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-ConfigFile-prof
BuildRequires:  ghc-HStringTemplate-prof
BuildRequires:  ghc-HTTP-prof
BuildRequires:  ghc-SHA-prof
BuildRequires:  ghc-aeson-prof
BuildRequires:  ghc-base-prof
BuildRequires:  ghc-base64-bytestring-prof
BuildRequires:  ghc-blaze-html-prof
BuildRequires:  ghc-bytestring-prof
BuildRequires:  ghc-containers-prof
BuildRequires:  ghc-directory-prof
BuildRequires:  ghc-doctemplates-prof
BuildRequires:  ghc-feed-prof
BuildRequires:  ghc-filepath-prof
BuildRequires:  ghc-filestore-prof
BuildRequires:  ghc-ghc-prof
BuildRequires:  ghc-ghc-paths-prof
BuildRequires:  ghc-happstack-server-prof
BuildRequires:  ghc-hoauth2-prof
BuildRequires:  ghc-hslogger-prof
BuildRequires:  ghc-http-client-tls-prof
BuildRequires:  ghc-http-conduit-prof
BuildRequires:  ghc-json-prof
BuildRequires:  ghc-mtl-prof
BuildRequires:  ghc-network-prof
BuildRequires:  ghc-network-bsd-prof
BuildRequires:  ghc-network-uri-prof
BuildRequires:  ghc-old-locale-prof
BuildRequires:  ghc-old-time-prof
BuildRequires:  ghc-pandoc-prof
BuildRequires:  ghc-pandoc-types-prof
BuildRequires:  ghc-parsec-prof
BuildRequires:  ghc-pretty-prof
BuildRequires:  ghc-process-prof
BuildRequires:  ghc-random-prof
BuildRequires:  ghc-recaptcha-prof
BuildRequires:  ghc-safe-prof
BuildRequires:  ghc-skylighting-prof
BuildRequires:  ghc-split-prof
BuildRequires:  ghc-syb-prof
BuildRequires:  ghc-tagsoup-prof
BuildRequires:  ghc-text-prof
BuildRequires:  ghc-time-prof
BuildRequires:  ghc-uri-bytestring-prof
BuildRequires:  ghc-url-prof
BuildRequires:  ghc-utf8-string-prof
BuildRequires:  ghc-uuid-prof
BuildRequires:  ghc-xhtml-prof
BuildRequires:  ghc-xml-prof
BuildRequires:  ghc-xml-conduit-prof
BuildRequires:  ghc-xml-types-prof
BuildRequires:  ghc-xss-sanitize-prof
BuildRequires:  ghc-zlib-prof
Requires:       %{name}-common = %{version}-%{release}
# End cabal-rpm deps

%description
Gitit is a wiki backed by a git, darcs, or mercurial filestore. Pages and
uploaded files can be modified either directly via the VCS's command-line tools
or through the wiki's web interface. Pandoc is used for markup processing, so
pages may be written in (extended) markdown, reStructuredText, LaTeX, HTML, or
literate Haskell, and exported in ten different formats, including LaTeX,
ConTeXt, DocBook, RTF, OpenOffice ODT, and MediaWiki markup.

Notable features include

* plugins: dynamically loaded page transformations written in Haskell (see
"Network.Gitit.Interface")

* conversion of TeX math to MathML for display in web browsers

* syntax highlighting of source code files and code snippets

* Atom feeds (site-wide and per-page)

* a library, "Network.Gitit", that makes it simple to include a gitit wiki in
any happstack application

You can see a running demo at <http://gitit.net>.

For usage information: 'gitit --help'.


%package common
Summary:        %{name} common files
BuildArch:      noarch

%description common
This package provides the %{name} common data files.


%package -n ghc-%{name}
Summary:        Haskell %{name} library
Requires:       %{name}-common = %{version}-%{release}

%description -n ghc-%{name}
This package provides the Haskell %{name} shared library.


%package -n ghc-%{name}-devel
Summary:        Haskell %{name} library development files
Provides:       ghc-%{name}-static = %{version}-%{release}
Provides:       ghc-%{name}-static%{?_isa} = %{version}-%{release}
%if %{defined ghc_version}
Requires:       ghc-compiler = %{ghc_version}
%endif
Requires:       ghc-%{name}%{?_isa} = %{version}-%{release}

%description -n ghc-%{name}-devel
This package provides the Haskell %{name} library development files.


%if %{with haddock}
%package -n ghc-%{name}-doc
Summary:        Haskell %{name} library documentation
BuildArch:      noarch

%description -n ghc-%{name}-doc
This package provides the Haskell %{name} library documentation.
%endif


%if %{with ghc_prof}
%package -n ghc-%{name}-prof
Summary:        Haskell %{name} profiling library
Requires:       ghc-%{name}-devel%{?_isa} = %{version}-%{release}
Supplements:    (ghc-%{name}-devel and ghc-prof)

%description -n ghc-%{name}-prof
This package provides the Haskell %{name} profiling library.
%endif


%prep
# Begin cabal-rpm setup:
%setup -q
# End cabal-rpm setup
cabal-tweak-dep-ver hoauth2 '< 1.12' '< 1.15'


%build
# Begin cabal-rpm build:
%ghc_lib_build
# End cabal-rpm build


%install
# Begin cabal-rpm install
%ghc_lib_install

# We need these for the software to work!
#rm %{buildroot}%{_datadir}/%{pkgver}/{CHANGES,README.markdown}
mv %{buildroot}%{_ghcdocdir}{,-common}
# End cabal-rpm install

# Install configuration file.
mkdir -p %{buildroot}%{_sysconfdir}/gitit
cp -a %SOURCE1 %{buildroot}%{_sysconfdir}/gitit/

# Install systemd service file.
mkdir -p %{buildroot}%{_unitdir}
cp -a %SOURCE2 %{buildroot}%{_unitdir}

# Install home directory for gitit user.
# We need some structure here (a "wiki" subdir, for the actual contents)
# which is why it's created in the package.
mkdir -p %{buildroot}%{_sharedstatedir}/gitit/wiki

%pre
getent group gitit >/dev/null || groupadd -r gitit
getent passwd gitit >/dev/null || \
    useradd -r -g gitit -d %{_sharedstatedir}/gitit -s /sbin/nologin \
    -c "Account for gitit wiki service" gitit
exit 0

%post
%systemd_post gitit.service

%preun
%systemd_preun gitit.service

%postun
%systemd_postun_with_restart gitit.service


%files
# Begin cabal-rpm files:
%{_bindir}/expireGititCache
%{_bindir}/%{name}
# End cabal-rpm files
%{_unitdir}/gitit.service
%config(noreplace) %{_sysconfdir}/gitit
%doc CHANGES README.markdown
# We want to install /var/lib/gitit/wiki and make it owned by the
# gitit user created in %pre... I forget if this is the best way to do that.
# (I guess the alternative is to try and make the directories in %post).
%attr(-,gitit,gitit) %dir %{_sharedstatedir}/gitit/
%attr(-,gitit,gitit) %dir %{_sharedstatedir}/gitit/wiki/


%files common
# Begin cabal-rpm files:
%license LICENSE
%doc CHANGES README.markdown
%{_datadir}/%{pkgver}
# End cabal-rpm files
%license BLUETRIP-LICENSE YUI-LICENSE TANGOICONS


%files -n ghc-%{name} -f ghc-%{name}.files


%files -n ghc-%{name}-devel -f ghc-%{name}-devel.files


%if %{with haddock}
%files -n ghc-%{name}-doc -f ghc-%{name}-doc.files
%license LICENSE
%endif


%if %{with ghc_prof}
%files -n ghc-%{name}-prof -f ghc-%{name}-prof.files
%endif


%changelog
* Sat Sep 19 21:39:16 +08 2020 Jens Petersen <petersen@redhat.com> - 0.13.0.0-4
- rebuild

* Sat Aug 01 2020 Fedora Release Engineering <releng@fedoraproject.org> - 0.13.0.0-3
- Second attempt - Rebuilt for
  https://fedoraproject.org/wiki/Fedora_33_Mass_Rebuild

* Mon Jul 27 2020 Fedora Release Engineering <releng@fedoraproject.org> - 0.13.0.0-2
- Rebuilt for https://fedoraproject.org/wiki/Fedora_33_Mass_Rebuild

* Wed Jun 10 2020 Jens Petersen <petersen@redhat.com> - 0.13.0.0-1
- update to 0.13.0.0

* Thu Feb 20 2020 Jens Petersen <petersen@redhat.com> - 0.12.3.2-5
- refresh to cabal-rpm-2.0.2

* Tue Jan 28 2020 Fedora Release Engineering <releng@fedoraproject.org> - 0.12.3.2-4
- Rebuilt for https://fedoraproject.org/wiki/Fedora_32_Mass_Rebuild

* Fri Aug 02 2019 Jens Petersen <petersen@redhat.com> - 0.12.3.2-3
- add doc and prof subpackages (cabal-rpm-1.0.0)

* Thu Jul 25 2019 Fedora Release Engineering <releng@fedoraproject.org> - 0.12.3.2-2
- Rebuilt for https://fedoraproject.org/wiki/Fedora_31_Mass_Rebuild

* Thu Feb 21 2019 Jens Petersen <petersen@redhat.com> - 0.12.3.2-1
- update to 0.12.3.2 release
- refresh to cabal-rpm-0.13 packaging

* Thu Jan 31 2019 Fedora Release Engineering <releng@fedoraproject.org> - 0.12.2.1-3.20180816gitee9927f
- Rebuilt for https://fedoraproject.org/wiki/Fedora_30_Mass_Rebuild

* Fri Sep 28 2018 Ben Rosser <rosser.bjr@gmail.com> - 0.12.2.1-2.20180816gitee9927f
- Updated license tag, add extra license files to package.
- Mark the entire /etc/gitit directory as owned by this package.
- Add bundled provides for javascript, CSS, and icons.

* Thu Aug 16 2018 Fedora Haskell SIG <haskell@lists.fedoraproject.org> - 0.12.2.1-1.20180816gitee9927f
- spec file generated by cabal-rpm-0.12.4
